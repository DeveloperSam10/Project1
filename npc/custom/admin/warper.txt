//===== Hercules Script ======================================
//= Warper
//===== By: ================================================== 
//= Euphy
//===== Current Version: =====================================
//= 1.2
//===== Compatible With: =====================================
//= Hercules
//===== Description: ========================================= 
//= A complete - but very condensed - warper script.
//= Coordinates written largely by Tekno-Kanix and ToastOfDoom.
//= Changed sprite to 4_M_NFDEADMAN from 859 for Halloween.
//============================================================

-	script	Warper	-1,{
function Go; function Disp; function Pick; function Restrict;

// --------------------------------------------------
//	Main Menu:
// --------------------------------------------------

mes "Hello ^FF0000"+strcharinfo(0)+"^000000 !";
if (.WarpFee) { mes "Each warp costs 5,000z"; }
menu	"Last Warp ^777777["+lastwarp$+"]^000000",-,
	" ~ Towns",Towns, " ~ Fields",Fields, " ~ Dungeons",Dungeons,
	" ~ Instances",Instances, " ~ Guild Castles",Castles, " ~ PvP/GvG",PvP, " ~ Special Areas",Special;

	if (lastwarp$ == "") dispbottom "You have not warped anywhere yet.";
	
	else if (Zeny < .WarpFee) {
		next;
		mes "Sorry, but you don't have enough zeny.";
		close;
	}
	else {
		warp lastwarp$,lastwarpx,lastwarpy;
	}
	close;

// ------------------- Functions -------------------
// * Go("<map>",<x>,<y>);
//	~ Warps directly to a map.
//
// * Disp("<Menu Option>",<first option>,<last option>);
// * Pick("<map_prefix>"{,<index offset>});
//	~ Dynamic menu and map selection (auto-numbered).
//
// * Disp("<Option 1>:<Option 2>:<etc.>");
// * Pick("","<map1>","<map2>","<etc.>");
//	~ Manual menu and map selection (listed).
//
// * Restrict("<RE | Pre-RE>"{,<menu option numbers>});
//	~ Only allows map for Renewal or Pre-Renewal modes.
//     If menu option numbers are given, only those maps
//     will be restricted (i.e. not for "Go").
//
// Other notes:
//   ~ Array @c[] holds all (x,y) coordinates.
//   ~ Use @c[2] EXCEPT when maps begin dynamically
//	  at 0: use @c[0] and Pick() offset 1.
// --------------------------------------------------

function Go {
	if (Zeny < .WarpFee) {
		next;
		mes "Sorry, but you don't have enough zeny.";
		close;
	}
	else {
		set Zeny, Zeny - .WarpFee;
		warp getarg(0),getarg(1,0),getarg(2,0);
		getmapxy(lastwarp$,lastwarpx,lastwarpy,0);
		close;
	}
}
function Disp {
	if (getargcount() < 3)
		set @menu$, getarg(0);
	else {
		set @menu$,"";
		for(set .@i,getarg(1); .@i<=getarg(2); set .@i,.@i+1)
			set @menu$, @menu$+getarg(0)+" "+.@i+":";
	}
	return;
}
function Pick {
	set .@warp_block,@warp_block;
	set @warp_block,0;
	if (getarg(0) == "") {
		set .@select, select(@menu$);
		set .@i, .@select;
		set .@map$, getarg(.@i);
		for (set @a,0; @a < getarraysize(.Blacklistedmaps$); set @a,@a+1) {
			if (.@map$ == .Blacklistedmaps$[@a]) { mes "Sorry, but you're not allowed to warp in this map."; close;}
			}
		if (Zeny < .WarpFee) {
			next;
			mes "Sorry, but you don't have enough zeny.";
			close;
		}
		else {
			set Zeny, Zeny - .WarpFee;
		}
	} else {
		set .@select, select(@menu$);
		set .@i, .@select-getarg(1,0);
		set .@map$, getarg(0)+((.@i<10)?"0":"")+.@i;
		for (set @a,0; @a < getarraysize(.Blacklistedmaps$); set @a,@a+1) {
			if (.@map$ == .Blacklistedmaps$[@a]) { mes "Sorry, but you're not allowed to warp in this map."; close;}
			}
		if (Zeny < .WarpFee) {
			next;
			mes "Sorry, but you don't have enough zeny.";
			close;
		}
		else {
			set Zeny, Zeny - .WarpFee;
		}
	}
	if (.@warp_block & (1<<.@select)) {
		message strcharinfo(0),"This map is not enabled in "+((checkre(0))?"":"Pre-")+"Renewal.";
		close;
	}
	warp .@map$,@c[.@i*2],@c[.@i*2+1];
	getmapxy(lastwarp$,lastwarpx,lastwarpy,0);
	deletearray @c[0],getarraysize(@c);
	end;
}

function Restrict {
	if ((getarg(0) == "RE" && !checkre(0)) || (getarg(0) == "Pre-RE" && checkre(0))) {
		if (getarg(1,0)) {
			set @warp_block,0;
			for(set .@i,1; .@i<getargcount(); set .@i,.@i+1)
				set @warp_block, @warp_block | (1<<getarg(.@i));
		} else {
			message strcharinfo(0),"This map is not enabled in "+((checkre(0))?"":"Pre-")+"Renewal.";
			close;
		}
	}
	return;
}

// --------------------------------------------------
	Towns:
// --------------------------------------------------
menu	"Prontera",T1, "Alberta",T2, "Aldebaran",T3, "Amatsu",T4, "Ayothaya",T5,
	"Brasilis",T6, "Comodo",T7, "Dewata",T33, "Eclage",T34, "Einbech",T8, 
	"Einbroch",T9, "El Dicastes",T10, "Geffen",T11, "Gonryun",T12, "Hugel",T13,
	"Izlude",T14, "Jawaii",T15, "Lighthalzen",T16, "Louyang",T17, "Lutie",T18,
	"Malangdo",T35, "Malaya",T36, "Manuk",T19, "Midgarts Expedition Camp",T20,
	"Mora",T21, "Morroc",T22, "Moscovia",T23, "Nameless Island",T24,
	"Niflheim",T25, "Payon",T26, "Rachel",T27, "Splendide",T28, "Thor Camp",T29,
	"Umbala",T30, "Veins",T31, "Yuno",T32;

T1: Go("prontera",155,183);
T2: Go("alberta",28,234);
T3: Go("aldebaran",140,131);
T4: Go("amatsu",198,84);
T5: Go("ayothaya",208,166);
T6: Go("brasilis",195,220);
T7: Go("comodo",209,143);
T8: Go("einbech",138,243);
T9: Go("einbroch",64,200);
T10: Go("dicastes01",197,187);
T11: Go("geffen",120,68);
T12: Go("gonryun",160,121);
T13: Go("hugel",96,145);
T14: Go("izlude",128,114);
T15: Go("jawaii",213,230);
T16: Go("lighthalzen",158,92);
T17: Go("louyang",217,100);
T18: Go("xmas",147,134);
T19: Go("manuk",260,175);
T20: Go("mid_camp",210,288);
T21: Go("mora",111,97);
T22: Go("morocc",156,93);
T23: Go("moscovia",219,193);
T24: Go("nameless_n",256,215);
T25: Go("niflheim",202,174);
T26: Go("payon",179,100);
T27: Go("rachel",130,111);
T28: Go("splendide",200,153);
T29: Go("thor_camp",246,68);
T30: Go("umbala",127,128);
T31: Go("veins",216,123);
T32: Go("yuno",157,51);
T33: Go("dewata",199,179);
T34: Go("eclage",111,39);
T35: Go("malangdo",224,184);
T36: Go("malaya",212,206);

// --------------------------------------------------
	Instances:
// --------------------------------------------------

menu	"Endless Tower",I1, "Hazy Forest",I2, "Malangdo Culvert",I3,
	"Nidhoggur's Nest",I4, "Octopus Cave",I5, "Orc's Memory",I6, "Sealed Shrine",I7;

I1: Go("e_tower",72,112);
I2: Restrict("RE");
	Go("bif_fild01",161,334);
I3: Restrict("RE");
	Go("mal_in01",164,21);
I4: Go("nyd_dun02",95,193);
I5: Restrict("RE");
	Go("mal_dun01",152,230);
I6: Go("gef_fild10",240,198);
I7: Go("monk_test",306,143);

// --------------------------------------------------
	Fields:
// --------------------------------------------------
menu	"Amatsu Fields",F1, "Ayothaya Fields",F2,
	"Comodo Fields",F5,
	"Einbroch Fields",F8,
	"Geffen Fields",F10, "Gonryun Fields",F11, "Hugel Fields",F12,
	"Lighthalzen Fields",F13, "Louyang Field",F14, "Lutie Field",F15,
	"Manuk Fields",F17, "Mjolnir Fields",F18,
	"Moscovia Fields",F19, "Niflheim Fields",F20, "Payon Forests",F21,
	"Prontera Fields",F22, "Rachel Fields",F23, "Sograt Deserts",F24,
	"Splendide Fields",F25, "Umbala Fields",F26, "Veins Fields",F27,
	"Yuno Fields",F28;

F1: setarray @c[2],190,197;
	Disp("Amatsu Field",1,1); Pick("ama_fild");
F2: setarray @c[2],173,134,212,150;
	Disp("Ayothaya Field",1,2); Pick("ayo_fild");
F3: Restrict("RE");
	setarray @c[2],193,220,220,187;
	Disp("Bifrost Field",1,2); Pick("bif_fild");
F4: Restrict("RE");
	setarray @c[2],74,32;
	Disp("Brasilis Field",1,1); Pick("bra_fild");
F5: Restrict("Pre-RE",5);
	setarray @c[2],180,178,231,160,191,172,228,194,224,203,190,223,234,177,194,175,172,172;
	Disp("Comodo Field",1,9); Pick("cmd_fild");
F6: Restrict("RE");
	setarray @c[2],371,212;
	Disp("Dewata Field",1,1); Pick("dew_fild");
F7: Restrict("RE");
	setarray @c[2],97,314;
	Disp("Eclage Field",1,1); Pick("ecl_fild");
F8: Restrict("Pre-RE",2,10);
	setarray @c[2],142,225,182,141,187,228,185,173,216,173,195,148,272,220,173,214,207,174,196,200;
	Disp("Einbroch Field",1,10); Pick("ein_fild");
F9: Restrict("RE");
	setarray @c[2],143,132,143,217;
	Disp("El Dicastes Field",1,2); Pick("dic_fild");
F10: Restrict("Pre-RE",13,15);
	setarray @c[0],46,199,213,204,195,212,257,192,188,171,166,263,248,158,195,191,186,183,221,117,178,218,136,328,240,181,235,235,211,185;
	Disp("Geffen Field",0,14); Pick("gef_fild",1);
F11: setarray @c[2],220,227;
	Disp("Gonryun Field",1,1); Pick("gon_fild");
F12: Restrict("Pre-RE",3,7);
	setarray @c[2],268,101,222,193,232,185,252,189,196,106,216,220,227,197;
	Disp("Hugel Field",1,7); Pick("hu_fild");
F13: setarray @c[2],240,179,185,235,240,226;
	Disp("Lighthalzen Field",1,3); Pick("lhz_fild");
F14: setarray @c[2],229,187;
	Disp("Louyang Field",1,1); Pick("lou_fild");
F15: setarray @c[2],115,145;
	Disp("Lutie Field",1,1); Pick("xmas_fild");
F16: Restrict("RE");
	setarray @c[2],40,272,207,180;
	Disp("Malaya Field",1,2); Pick("ma_fild");
F17: setarray @c[2],35,236,35,262,84,365;
	Disp("Manuk Field",1,3); Pick("man_fild");
F18: setarray @c[2],204,120,175,193,208,213,179,180,181,240,195,270,235,202,188,215,205,144,245,223,180,206,196,208;
	Disp("Mjolnir Field",1,12); Pick("mjolnir_");
F19: setarray @c[2],82,104,131,147;
	Disp("Moscovia Field",1,2); Pick("mosk_fild");
F20: setarray @c[2],215,229,167,234;
	Disp("Niflheim Field",1,2); Pick("nif_fild");
F21: Restrict("Pre-RE",5,11);
	setarray @c[2],158,206,151,219,205,148,186,247,134,204,193,235,200,177,137,189,201,224,160,205,194,150;
	Disp("Payon Forest",1,11); Pick("pay_fild");
F22: setarray @c[0],208,227,190,206,240,206,190,143,307,252,239,213,185,188,193,194,187,218,210,183,195,149,198,164;
	Disp("Prontera Field",0,11); Pick("prt_fild",1);
F23: Restrict("Pre-RE",2,7,9,10,11,13);
	setarray @c[2],192,162,235,166,202,206,202,208,225,202,202,214,263,196,217,201,87,121,277,181,221,185,175,200,174,197;
	Disp("Rachel Field",1,13); Pick("ra_fild");
F24: setarray @c[2],219,205,177,206,194,182,224,170,198,216,156,187,185,263,206,228,208,238,209,223,85,97,207,202,31,195,38,195;
	Disp("Sograt Desert 1:Sograt Desert 2:Sograt Desert 3:Sograt Desert 7:Sograt Desert 11:Sograt Desert 12:Sograt Desert 13:Sograt Desert 16:Sograt Desert 17:Sograt Desert 18:Sograt Desert 19:Sograt Desert 20:Sograt Desert 21:Sograt Desert 22");
	Pick("","moc_fild01","moc_fild02","moc_fild03","moc_fild07","moc_fild11","moc_fild12","moc_fild13","moc_fild16","moc_fild17","moc_fild18","moc_fild19","moc_fild20","moc_fild21","moc_fild22");
F25: setarray @c[2],175,186,236,184,188,204;
	Disp("Splendide Field",1,3); Pick("spl_fild");
F26: setarray @c[2],217,206,223,221,237,215,202,197;
	Disp("Umbala Field",1,4); Pick("um_fild");
F27: Restrict("Pre-RE",5);
	setarray @c[2],186,175,196,370,222,45,51,250,202,324,150,223,149,307;
	Disp("Veins Field",1,7); Pick("ve_fild");
F28: Restrict("Pre-RE",5,10);
	setarray @c[2],189,224,192,207,221,157,226,199,223,177,187,232,231,174,196,203,183,214,200,124,195,226,210,304;
	Disp("Yuno Field",1,12); Pick("yuno_fild");

// --------------------------------------------------
	Dungeons:
// --------------------------------------------------
menu	"Abyss Lakes",D1, "Amatsu Dungeon",D2, "Anthell",D3,
	"Ayothaya Dungeon",D4, "Beach Dungeon",D5, "Bio Labs",D6,
	"Byalan Dungeon",D8, "Clock Tower",D9,
	"Coal Mines",D10, "Culvert",D11, "Cursed Abbey",D12,
	"Einbroch Dungeon",D14, "Gefenia",D15, "Geffen Dungeon",D16,
	"Glast Heim",D17, "Gonryun Dungeon",D18, "Hidden Dungeon",D19,
	"Ice Dungeon",D20, "Juperos",D21, "Kiel Dungeon",D22, "Louyang Dungeon",D23,
	"Magma Dungeon",D24, "Moscovia Dungeon",D26,
	"Odin Temple",D28, "Orc Dungeon",D29,
	"Payon Dungeon",D30, "Pyramids",D31, "Rachel Sanctuary",D32,
	"Sphinx",D34, "Sunken Ship",D35, "Thanatos Tower",D36,
	"Thor Volcano",D37, "Toy Factory",D38, "Turtle Dungeon",D39, "Umbala Dungeon",D40;
D1: setarray @c[2],261,272,275,270,116,27;
	Disp("Abyss Lakes",1,3); Pick("abyss_");
D2: setarray @c[2],228,11,34,41,119,14;
	Disp("Amatsu Dungeon",1,3); Pick("ama_dun");
D3: setarray @c[2],35,262,168,170;
	Disp("Anthell",1,2); Pick("anthell");
D4: setarray @c[2],275,19,24,26;
	Disp("Ancient Shrine Maze:Inside Ancient Shrine"); Pick("ayo_dun");
D5: setarray @c[2],266,67,255,244,23,260;
	Disp("Beach Dungeon",1,3); Pick("","beach_dun","beach_dun2","beach_dun3");
D6: Restrict("RE",4);
	setarray @c[2],150,288,150,18,140,134,244,52;
	Disp("Bio Lab",1,4); Pick("lhz_dun");
D7: Restrict("RE");
	setarray @c[2],87,47,262,262;
	Disp("Brasilis Dungeon",1,2); Pick("bra_dun");
D8: Restrict("RE",6);
	setarray @c[0],168,168,253,252,236,204,32,63,26,27,141,187;
	Disp("Byalan Dungeon",1,6); Pick("iz_dun",1);
D9: setarray @c[2],199,159,148,283,65,147,56,155,297,25,127,169,277,178,268,74;
	Disp("Clock Tower 1:Clock Tower 2:Clock Tower 3:Clock Tower 4:Basement 1:Basement 2:Basement 3:Basement 4");
	Pick("","c_tower1","c_tower2","c_tower3","c_tower4","alde_dun01","alde_dun02","alde_dun03","alde_dun04");
D10: setarray @c[2],52,17,381,343,302,262;
	Disp("Coal Mines",1,3); Pick("mjo_dun");
D11: setarray @c[2],131,247,19,19,180,169,100,92;
	Disp("Culvert",1,4); Pick("","prt_sewb1","prt_sewb2","prt_sewb3","prt_sewb4");
D12: setarray @c[2],51,14,150,11,120,10;
	Disp("Cursed Abbey",1,3); Pick("abbey");
D13: Restrict("RE");
	setarray @c[2],285,160,299,29;
	Disp("Dewata Dungeon",1,2); Pick("dew_dun");
D14: setarray @c[2],22,14,292,290;
	Disp("Einbroch Dungeon",1,2); Pick("ein_dun");
D15: setarray @c[2],40,103,203,34,266,168,130,272;
	Disp("Gefenia",1,4); Pick("gefenia",0);
D16: setarray @c[0],104,99,115,236,106,132,203,200;
	Disp("Geffen Dungeon",1,4); Pick("gef_dun",1);
D17: setarray @c[2],370,304,199,29,104,25,150,15,157,287,147,15,258,255,108,291,171,283,68,277,156,7,12,7,133,271,224,274,14,70,150,14;
	Disp("Entrance:Castle 1:Castle 2:Chivalry 1:Chivalry 2:Churchyard:Culvert 1:Culvert 2:Culvert 3:Culvert 4:St. Abbey:Staircase Dungeon:Underground Cave 1:Underground Cave 2:Underground Prison 1:Underground Prison 2");
	Pick("","glast_01","gl_cas01","gl_cas02","gl_knt01","gl_knt02","gl_chyard","gl_sew01","gl_sew02","gl_sew03","gl_sew04","gl_church","gl_step","gl_dun01","gl_dun02","gl_prison","gl_prison1");
D18: setarray @c[2],153,53,28,113,68,16;
	Disp("Gonryun Dungeon",1,3); Pick("gon_dun");
D19: setarray @c[2],176,7,93,20,23,8;
	Disp("Hidden Dungeon",1,3); Pick("prt_maze");
D20: setarray @c[2],157,14,151,155,149,22,33,158;
	Disp("Ice Dungeon",1,4); Pick("ice_dun");
D21: setarray @c[2],140,51,53,247,37,63,150,285;
	Disp("Entrance:Juperos 1:Juperos 2:Core");
	Pick("","jupe_cave","juperos_01","juperos_02","jupe_core");
D22: setarray @c[2],28,226,41,198;
	Disp("Kiel Dungeon",1,2); Pick("kh_dun");
D23: setarray @c[2],218,196,282,20,165,38;
	Disp("The Royal Tomb:Inside the Royal Tomb:Suei Long Gon"); Pick("lou_dun");
D24: setarray @c[2],126,68,47,30;
	Disp("Magma Dungeon",1,2); Pick("mag_dun");
D25: Restrict("RE");
	setarray @c[2],33,230;
	Disp("Malangdo Dungeon",1,1); Pick("mal_dun");
D26: setarray @c[2],189,48,165,30,32,135;
	Disp("Moscovia Dungeon",1,3); Pick("mosk_dun");
D27: setarray @c[2],61,239,60,271;
	Disp("Nidhogg's Dungeon",1,2); Pick("nyd_dun");
D28: setarray @c[2],298,167,224,149,266,280;
	Disp("Odin Temple",1,3); Pick("odin_tem");
D29: setarray @c[2],32,170,21,185;
	Disp("Orc Dungeon",1,2); Pick("orcsdun");
D30: setarray @c[0],21,183,19,33,19,63,155,159,201,204;
	Disp("Payon Dungeon",1,5); Pick("pay_dun",1);
D31: setarray @c[2],192,9,10,192,100,92,181,11,94,96,192,8;
	Disp("Pyramids 1:Pyramids 2:Pyramids 3:Pyramids 4:Basement 1:Basement 2"); Pick("moc_pryd");
D32: setarray @c[2],140,11,32,21,10,149,204,218,150,9;
	Disp("Rachel Sanctuary",1,5); Pick("ra_san");
D33: Restrict("RE");
	setarray @c[2],364,44,101,141;
	Disp("Scaraba Hole",1,2); Pick("dic_dun");
D34: setarray @c[2],288,9,149,81,210,54,10,222,100,99;
	Disp("Sphinx",1,5); Pick("","in_sphinx1","in_sphinx2","in_sphinx3","in_sphinx4","in_sphinx5");
D35: setarray @c[2],69,24,102,27;
	Disp("Sunken Ship",1,2); Pick("treasure");
D36: setarray @c[2],150,39,150,136,220,158,59,143,62,11,89,221,35,166,93,148,29,107,159,138,19,20,130,52;
	Disp("Thanatos Tower",1,12); Pick("tha_t");
D37: setarray @c[2],21,228,75,205,34,272;
	Disp("Thor Volcano",1,3); Pick("thor_v");
D38: setarray @c[2],205,15,129,133;
	Disp("Toy Factory",1,2); Pick("xmas_dun");
D39: setarray @c[2],154,49,148,261,132,189,100,192;
	Disp("Entrance:Turtle Dungeon 1:Turtle Dungeon 2:Turtle Dungeon 3"); Pick("tur_dun");
D40: Restrict("Pre-RE",1,2);
	setarray @c[2],42,31,48,30,204,78;
	Disp("Carpenter's Shop in the Tree:Passage to a Foreign World:Hvergermil's Fountain");
	Pick("","um_dun01","um_dun02","yggdrasil01");

GD: setarray @c[2],119,93,39,161,50,44,116,45,199,195,200,124;
	mes "To able to access guild dungeon, there is a 500,000z fee.";
	mes "Do you want to continue?";
	mes "(If you press YES, the zeny will already be deducted/deleted from you!)";
	switch (select("Yes:No")) {
		case 1:
			if (Zeny < .GDFee) {
				next;
				mes "Sorry, but you don't have money!";
				close;
				}
			else {
				set Zeny, Zeny - .GDFee;
				Disp("","Baldur:Luina:Valkyrie:Britoniah:Arunafeltz:Schwaltzvalt");
				Pick("","gld_dun01","gld_dun02","gld_dun03","gld_dun04","arug_dun01","schg_dun01");
			}
		default:
			close;
	}

// --------------------------------------------------
	Castles:
// --------------------------------------------------
menu	"Aldebaran Castles",C1, "Geffen Castles",C2, "Payon Castles",C3,
	"Prontera Castles",C4, "Arunafeltz Castles",C5, "Schwaltzvalt Castles",C6;

C1: setarray @c[2],48,83,95,249,142,85,239,242,264,90;
	Disp("","Neuschwanstein:Hohenschwangau:Nuenberg:Wuerzburg:Rothenburg");
	Pick("","alde_gld","alde_gld","alde_gld","alde_gld","alde_gld");
C2: setarray @c[2],214,75,308,240,143,240,193,278,305,87;
	Disp("","Repherion:Eeyolbriggar:Yesnelph:Bergel:Mersetzdeitz");
	Pick("","gef_fild13","gef_fild13","gef_fild13","gef_fild13","gef_fild13");
C3: setarray @c[2],121,233,295,116,317,293,140,160,204,266;
	Disp("","Bright Arbor:Scarlet Palace:Holy Shadow:Sacred Altar:Bamboo Grove Hill");
	Pick("","pay_gld","pay_gld","pay_gld","pay_gld","pay_gld");
C4: setarray @c[2],134,65,240,128,153,137,111,240,208,240;
	Disp("","Kriemhild:Swanhild:Fadhgridh:Skoegul:Gondul");
	Pick("","prt_gld","prt_gld","prt_gld","prt_gld","prt_gld");
C5: setarray @c[2],158,272,83,47,68,155,299,345,292,107;
	Disp("","Mardol:Cyr:Horn:Gefn:Banadis");
	Pick("","aru_gld","aru_gld","aru_gld","aru_gld","aru_gld");
C6: setarray @c[2],293,100,288,252,97,196,137,90,71,315;
	Disp("","Himinn:Andlangr:Viblainn:Hljod:Skidbladnir");
	Pick("","sch_gld","sch_gld","sch_gld","sch_gld","sch_gld");

// --------------------------------------------------
	PvP:
// --------------------------------------------------
menu	"^0000FFPvP Arena 1 [" + getmapusers("pvp_room01.gat") + " / 20]^000000",NPvP1,	// Non Donor with Usable items
		//"^0000FFNon-Donor PvP Arena 2 [" + getmapusers("pvp_room02.gat") + " / 20]^000000",L2,	// Non Donor without Usable items
		//"^0000FFDonor PvP Arena 1 [" + getmapusers("pvp_room03.gat") + " / 20]^000000",DPvP1,	// Donor with Usable items
		//"^0000FFDonor PvP Arena 2 [" + getmapusers("pvp_room04.gat") + " / 20]^000000",LD2,	// Donor without Usable items
		"^FF0000GvG Arena 1 [" + getmapusers("guild_vs1.gat") + " / 20]^000000",GvG;	// GVG Room
		//"^FF0000GvG Arena 2 [" + getmapusers("prt_are01.gat") + " / 20]^000000",L4,
		//"Baby PvP Arena  [" + getmapusers("guild_vs2.gat") + " / 20]",L5,
		//"Novice Event Arena  [" + getmapusers("nov_nov01.gat") + " / 20]",L6;

NPvP1: 
	if (getmapusers("pvp_room01.gat") > 19) goto Lsorry;
	else if ( Upper == 2 || Upper == 6 ) goto L_yesbaby;
	callsub DetectDonate;
	announce "[ "+strcharinfo(0)+" ] is warped into Non Donor PVP Arena 1.",0;
	Go("pvp_room01",0,0);

DPvP1:
	if (getmapusers("pvp_room03.gat") > 19) goto Lsorry;
	else if ( Upper == 2 || Upper == 6 ) goto L_yesbaby;
	announce "[ "+strcharinfo(0)+" ] is warped into Donor PVP Arena 1.",0;
	Go("pvp_room03",0,0);

GvG:
	if (getmapusers("guild_vs1.gat") > 19) goto Lsorry2;
	else if (getcharid(2) == 0) goto L_noguild;
	announce "[ "+strcharinfo(0)+" ] is warped into GVG Arena 1.",0;
	Go("guild_vs1",0,0);


// --------------------------------------------------
	Special:
// --------------------------------------------------
menu	"Mall",MV,"Auction Hall",S1, "Battlegrounds",S2, "Casino",S3;

MV: Go("turbo_room",82,132);
S1: Go("auction_01",22,68);
S2: Go("bat_room",154,150);
S3: Go("cmd_in02",179,129);
S4: Go("gon_test",48,10);
S5: Go("arena_room",100,88);
S6: Go("p_track01",62,41);
S7: Go("turbo_room",99,114);

Lsorry:
mes "[Warper]";
mes "Sorry but this PVP Arena is full, maybe you could try another one.";
close;
end;

Lsorry2:
mes "[Warper]";
mes "Sorry but this GVG Arena is full, maybe you could try another one.";
close;
end;

L_notbaby:
mes "[Warper]";
mes "Sorry but this PVP Arena is for baby jobs only!";
close;
end;

L_yesbaby:
mes "[Warper]";
mes "Sorry but baby jobs cannot enter this PVP Arena!";
close;
end;

L_noguild:
mes "[Warper]";
mes "Sorry but you don't have a guild!";
close;
end;

DetectDonate:
	for (set .@i,0; .@i < (getarraysize(.DonorUpper)); set .@i,.@i+1) {
		if (countitem(.DonorUpper[.@i]) >= 1) {
			mes "Sorry but donation items (^FF0000"+getitemname (.DonorUpper[.@i]) +"^000000) are not allowed inside.";
			mes "Please keep them in your storage.";
			close;
		}
	}
	for (set .@i,0; .@i < (getarraysize(.DonorLower)); set .@i,.@i+1) {
		if	(countitem(.DonorLower[.@i]) >= 1) {
			mes "Sorry but donation items (^FF0000"+getitemname (.DonorLower[.@i]) +"^000000) are not allowed inside.";
			mes "Please keep them in your storage.";
			close;
		}
	}
	for (set .@i,0; .@i < (getarraysize(.DonorMiddle)); set .@i,.@i+1) {
		if	(countitem(.DonorMiddle[.@i]) >= 1) {
			mes "Sorry but donation items (^FF0000"+getitemname (.DonorMiddle[.@i]) +"^000000) are not allowed inside.";
			mes "Please keep them in your storage.";
			close;
		}
	}
	for (set .@i,0; .@i < (getarraysize(.DonorArmor)); set .@i,.@i+1) {
		if	(countitem(.DonorArmor[.@i]) >= 1) {
			mes "Sorry but donation items (^FF0000"+getitemname (.DonorArmor[.@i]) +"^000000) are not allowed inside.";
			mes "Please keep them in your storage.";
			close;
		}
	}
	for (set .@i,0; .@i < (getarraysize(.DonorWeapon)); set .@i,.@i+1) {
		if	(countitem(.DonorWeapon[.@i]) >= 1) {
			mes "Sorry but donation items (^FF0000"+getitemname (.DonorWeapon[.@i]) +"^000000) are not allowed inside.";
			mes "Please keep them in your storage.";
			close;
		}
	}
	for (set .@i,0; .@i < (getarraysize(.DonorShield)); set .@i,.@i+1) {
		if	(countitem(.DonorShield[.@i]) >= 1) {
			mes "Sorry but donation items (^FF0000"+getitemname (.DonorShield[.@i]) +"^000000) are not allowed inside.";
			mes "Please keep them in your storage.";
			close;
		}
	}
	for (set .@i,0; .@i < (getarraysize(.DonorGarment)); set .@i,.@i+1) {
		if	(countitem(.DonorGarment[.@i]) >= 1) {
			mes "Sorry but donation items (^FF0000"+getitemname (.DonorGarment[.@i]) +"^000000) are not allowed inside.";
			mes "Please keep them in your storage.";
			close;
		}
	}
	for (set .@i,0; .@i < (getarraysize(.DonorShoes)); set .@i,.@i+1) {
		if	(countitem(.DonorShoes[.@i]) >= 1) {
			mes "Sorry but donation items (^FF0000"+getitemname (.DonorShoes[.@i]) +"^000000) are not allowed inside.";
			mes "Please keep them in your storage.";
			close;
		}
	}
	for (set .@i,0; .@i < (getarraysize(.DonorAccessories)); set .@i,.@i+1) {
		if	(countitem(.DonorAccessories[.@i]) >= 1) {
			mes "Sorry but donation items (^FF0000"+getitemname (.DonorAccessories[.@i]) +"^000000) are not allowed inside.";
			mes "Please keep them in your storage.";
			close;
		}
	}
	return;
	end;

OnInit:
set .WarpFee,0;
set .GDFee,500000;
setarray .Blacklistedmaps$,"pay_fild11",
							"xmas_fild01",
							"ra_fild03",
							"ra_fild04",
							"moc_fild17",
							"ve_fild01",
							"ve_fild02",
							"mjolnir_04",
							"gef_fild14",
							"gef_fild02",
							"moc_fild22",
							"spl_fild03",
							"man_fild03",
							"xmas_dun02",
							"beach_dun",
							"moc_pryd06",
							"gef_dun01",
							"prt_sewb4",
							"ayo_dun02",
							"pay_dun04",
							"moc_pryd04",
							"treasure02",
							"in_sphinx5",
							"tur_dun04",
							"anthell02",
							"mosk_dun03",
							"gef_dun02",
							"lhz_dun02",
							"kh_dun02",
							"gon_dun03",
							"ama_dun03",
							"jupe_core",
							"ra_san05",
							"lou_dun03",
							"abbey02",
							"prt_maze03",
							"gl_chyard",
							"abyss_03",
							"thor_v03",
							"ein_dun02",
							"odin_tem03",
							"abbey03",
							"lhz_dun03";
							
//setarray .DonorUpper[0],5467,5805,5518,5374,5495,5379,5013,5801,5137,5226,5375,5257,5451,5535,5312,5372,5492,5567,5564,5481,5340,5341,5342,5343,5344,5345,5269;
//setarray .DonorMiddle[0],18503,5800,5421,5389,5135,5326,5471,5325,5592,5664;
//setarray .DonorLower[0],5462,5596,5597,5532,5536,5463,5361,5377;
//setarray .DonorArmor[0],2383,2384,2369,2349,2351,2345,2347;
//setarray .DonorWeapon[0],1228,13017,13414,13412,13413,1579,16003;
//setarray .DonorShield[0],2127,2132,2136,2126,2128,2115;
//setarray .DonorGarment[0],2534,2554,2547,2533,2537,2542,2524;
//setarray .DonorShoes[0],2410,2428,2433,2421;
//setarray .DonorAccessories[0],2629,27005,27006,2767,2769,2630,2768,2771,2766,2770,2737;
end;
}

// --------------------------------------------------
//	Duplicates:
// --------------------------------------------------
prontera,152,192,6	duplicate(Warper)	Warper#1	4_M_NFDEADMAN
rachel,135,116,4	duplicate(Warper)	Warper#2	4_M_NFDEADMAN
alberta,28,240,4	duplicate(Warper)	Warper#3	4_M_NFDEADMAN
aldebaran,145,118,4	duplicate(Warper)	Warper#4	4_M_NFDEADMAN
amatsu,203,87,4	duplicate(Warper)	Warper#5	4_M_NFDEADMAN
ayothaya,209,169,6	duplicate(Warper)	Warper#6	4_M_NFDEADMAN
comodo,194,158,4	duplicate(Warper)	Warper#7	4_M_NFDEADMAN
einbech,142,246,4	duplicate(Warper)	Warper#8	4_M_NFDEADMAN
einbroch,69,202,4	duplicate(Warper)	Warper#9	4_M_NFDEADMAN
hugel,101,151,4	duplicate(Warper)	Warper#10	4_M_NFDEADMAN
lighthalzen,151,101,6	duplicate(Warper)	Warper#11	4_M_NFDEADMAN
geffen,124,72,4	duplicate(Warper)	Warper#12	4_M_NFDEADMAN
izlude,132,120,4	duplicate(Warper)	Warper#13	4_M_NFDEADMAN
xmas,150,136,4	duplicate(Warper)	Warper#14	4_M_NFDEADMAN
morocc,159,97,4	duplicate(Warper)	Warper#15	4_M_NFDEADMAN
payon,182,108,4	duplicate(Warper)	Warper#16	4_M_NFDEADMAN
yuno,162,47,4	duplicate(Warper)	Warper#17	4_M_NFDEADMAN
moc_fild04,207,331,4	duplicate(Warper)	Warper#18	4_M_NFDEADMAN
izlu2dun,104,82,4	duplicate(Warper)	Warper#19	4_M_NFDEADMAN
mjolnir_02,85,363,4	duplicate(Warper)	Warper#20	4_M_NFDEADMAN
prt_fild05,273,215,4	duplicate(Warper)	Warper#21	4_M_NFDEADMAN
glast_01,370,308,4	duplicate(Warper)	Warper#22	4_M_NFDEADMAN
yuno_fild03,37,135,4	duplicate(Warper)	Warper#23	4_M_NFDEADMAN
gef_fild10,71,339,4	duplicate(Warper)	Warper#24	4_M_NFDEADMAN
pay_arche,39,135,4	duplicate(Warper)	Warper#25	4_M_NFDEADMAN
moc_ruins,64,166,4	duplicate(Warper)	Warper#26	4_M_NFDEADMAN
moc_fild19,106,97,4	duplicate(Warper)	Warper#27	4_M_NFDEADMAN
alb2trea,73,101,4	duplicate(Warper)	Warper#28	4_M_NFDEADMAN
tur_dun01,148,239,4	duplicate(Warper)	Warper#29	4_M_NFDEADMAN
gonryun,162,122,4	duplicate(Warper)	Warper#30	4_M_NFDEADMAN
louyang,208,103,6	duplicate(Warper)	Warper#31	4_M_NFDEADMAN
umbala,132,130,4	duplicate(Warper)	Warper#32	4_M_NFDEADMAN
brasilis,201,222,4	duplicate(Warper)	Warper#33	4_M_NFDEADMAN
manuk,262,177,4	duplicate(Warper)	Warper#34	4_M_NFDEADMAN
splendide,205,153,4	duplicate(Warper)	Warper#35	4_M_NFDEADMAN
mid_camp,216,288,4	duplicate(Warper)	Warper#36	4_M_NFDEADMAN
dicastes01,194,194,6	duplicate(Warper)	Warper#37	4_M_NFDEADMAN
mora,110,100,4	duplicate(Warper)	Warper#38	4_M_NFDEADMAN
moscovia,216,196,6	duplicate(Warper)	Warper#39	4_M_NFDEADMAN
nameless_n,259,213,4	duplicate(Warper)	Warper#40	4_M_NFDEADMAN
niflheim,205,179,4	duplicate(Warper)	Warper#41	4_M_NFDEADMAN
thor_camp,249,76,4	duplicate(Warper)	Warper#42	4_M_NFDEADMAN
veins,214,123,4	duplicate(Warper)	Warper#43	4_M_NFDEADMAN
dewata,194,178,6	duplicate(Warper)	Warper#44	4_M_NFDEADMAN
eclage,107,37,4	duplicate(Warper)	Warper#45	4_M_NFDEADMAN
malaya,210,205,4	duplicate(Warper)	Warper#46	4_M_NFDEADMAN
malangdo,220,188,6	duplicate(Warper)	Warper#47	4_M_NFDEADMAN
malangdo,145,119,6	duplicate(Warper)	Warper#48	4_M_NFDEADMAN